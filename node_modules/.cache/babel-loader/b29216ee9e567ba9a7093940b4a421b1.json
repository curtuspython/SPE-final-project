{"ast":null,"code":"var _jsxFileName = \"/home/demonwolf/WebstormProjects/SPE-final-project/client/src/components/RegisterServiceProvider.js\";\nimport React, { Component, useState } from \"react\";\nimport '../css/RegisterScreen.css';\nimport validator from 'validator';\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterServiceProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onsubmit = async e => {\n      e.preventDefault();\n      const name = e.target.elements.full_name.value;\n      const location = e.target.elements.city.value;\n      const email = e.target.elements.email.value;\n      const phone = e.target.elements.phone.value;\n      const charges = e.target.elements.charges.value;\n      const service_type = e.targe.elements.stype.value;\n      const address = e.target.elements.spAddress.value;\n      await this.props.contract.methods.addServiceProvider(name, location, email, phone, charges, service_type).send({\n        from: address\n      }).then(function (result) {\n        console.log(\"The funciton was succesfully terminated\");\n      });\n    };\n\n    this.state = {\n      emailError: '',\n      phoneError: '',\n      spAccount: this.props.Account,\n      contract: this.props.contract\n    };\n  }\n\n  validateEmail(e) {\n    let email = e.target.value;\n\n    if (validator.isEmail(email)) {\n      this.setState({\n        emailError: 'Valid Email!'\n      });\n    } else {\n      this.setState({\n        emailError: 'Enter valid Email!'\n      });\n    }\n  }\n\n  validatePhoneNumber(e) {\n    const number = e.target.value;\n    const isValidPhoneNumber = validator.isMobilePhone(number, 'en-IN');\n\n    if (isValidPhoneNumber) {\n      this.setState({\n        phoneError: 'Valid Phone!'\n      });\n    } else {\n      this.setState({\n        phoneError: \"Invalid Phone Number\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      color: \"lightblue\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onsubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign Up for User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please fill in this form to create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userAddress\",\n          readOnly: true,\n          value: this.state.spAccount = this.props.Account,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter full name\",\n          name: \"full_name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter City\",\n          name: \"location\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Enter Email\",\n          onChange: e => this.validateEmail(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            color: 'red'\n          },\n          children: this.state.emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phone\",\n          placeholder: \"Enter Phone\",\n          onChange: e => this.validatePhoneNumber(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            color: 'red'\n          },\n          children: this.state.phoneError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Enter the price in Ether\",\n          name: \"charges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"candidate\",\n          className: \"form-control\",\n          onChange: onChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 1,\n            children: \"Carpenter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 2,\n            children: \"Plumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 3,\n            children: \"Electrician\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 4,\n            children: \"Painter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-2 btn-sm w-50\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(RegisterServiceProvider);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/demonwolf/WebstormProjects/SPE-final-project/client/src/components/RegisterServiceProvider.js"],"names":["React","Component","useState","validator","withRouter","RegisterServiceProvider","constructor","props","onsubmit","e","preventDefault","name","target","elements","full_name","value","location","city","email","phone","charges","service_type","targe","stype","address","spAddress","contract","methods","addServiceProvider","send","from","then","result","console","log","state","emailError","phoneError","spAccount","Account","validateEmail","isEmail","setState","validatePhoneNumber","number","isValidPhoneNumber","isMobilePhone","render","fontWeight","color","onChange"],"mappings":"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","sourcesContent":["import React, {Component, useState} from \"react\";\nimport '../css/RegisterScreen.css'\nimport validator from 'validator'\nimport {withRouter} from \"react-router\";\n\nclass RegisterServiceProvider extends Component{\n\n\n    constructor(props) {\n        super(props);\n        this.state={emailError: '', phoneError :'', spAccount :this.props.Account, contract:this.props.contract};\n\n    }\n\n    validateEmail(e){\n        let email = e.target.value;\n\n        if (validator.isEmail(email)) {\n            this.setState({emailError : 'Valid Email!'});\n        }\n        else {\n            this.setState({emailError : 'Enter valid Email!'});\n        }\n    }\n\n    validatePhoneNumber(e){\n        const number = e.target.value;\n        const isValidPhoneNumber = validator.isMobilePhone(number, 'en-IN')\n        if(isValidPhoneNumber){\n            this.setState({phoneError :'Valid Phone!'});\n        }\n        else {\n            this.setState({phoneError : \"Invalid Phone Number\"});\n        }\n    }\n\n    onsubmit = async(e)=>{\n\n        e.preventDefault();\n        const name = e.target.elements.full_name.value;\n        const location = e.target.elements.city.value;\n        const email = e.target.elements.email.value;\n        const phone = e.target.elements.phone.value;\n        const charges = e.target.elements.charges.value;\n        const service_type = e.targe.elements.stype.value;\n        const address= e.target.elements.spAddress.value;\n        await this.props.contract.methods.addServiceProvider(name,location, email,phone, charges,service_type ).send({from : address}).then(function(result){\n            console.log(\"The funciton was succesfully terminated\");\n        });\n\n    }\n    render(){\n        return(\n            <div className=\"container\" color= \"lightblue\">\n                <form onSubmit={this.onsubmit}>\n                    <h1>Sign Up for User</h1>\n                    <p>Please fill in this form to create an account</p>\n                    <input type =\"text\"  name = \"userAddress\" readOnly={true} value={this.state.spAccount = this.props.Account} disabled={true}/>\n                    <input type=\"text\" placeholder=\"Enter full name\" name=\"full_name\"   required/>\n                    <input type=\"text\" placeholder=\"Enter City\" name=\"location\" required/>\n                    <input type=\"text\" name=\"email\" placeholder=\"Enter Email\"\n                           onChange={(e) => this.validateEmail(e)}/> <br/>\n                    <span style={{\n                        fontWeight: 'bold',\n                        color: 'red',\n                    }}>{this.state.emailError}</span>\n                    <input type=\"text\" name=\"phone\" placeholder=\"Enter Phone\"\n                           onChange={(e) => this.validatePhoneNumber(e)}/> <br/>\n                    <span style={{\n                        fontWeight: 'bold',\n                        color: 'red',\n                    }}>{this.state.phoneError}</span>\n                    <input type=\"number\" placeholder=\"Enter the price in Ether\" name=\"charges\"/>\n                    <select name=\"candidate\" className=\"form-control\" onChange={onChange}>\n                        <option value = \"0\">Select</option>\n                        <option value = {1}>Carpenter</option>\n                        <option value = {2}>Plumber</option>\n                        <option value ={3}>Electrician</option>\n                        <option value = {4}>Painter</option>\n                    </select>\n                    <button className=\"btn btn-primary mt-2 btn-sm w-50\">Sign Up</button>\n                </form>\n            </div>\n        )}\n}\n\nexport default withRouter(RegisterServiceProvider);"]},"metadata":{},"sourceType":"module"}