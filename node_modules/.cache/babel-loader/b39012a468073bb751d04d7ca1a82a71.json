{"ast":null,"code":"var _jsxFileName = \"/home/demonwolf/WebstormProjects/SPE-final-project/client/src/components/RegisterServiceProvider.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport 'react-bootstrap';\nimport { useState } from 'react';\nimport validator from \"validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterServiceProvider = (Account, Contract) => {\n  _s();\n\n  let [account, setAccount] = useState(0x0);\n\n  const validateEmail = e => {\n    let email = e.target.value;\n\n    if (validator.isEmail(email)) {\n      this.setState({\n        emailError: 'Valid Email!'\n      });\n    } else {\n      this.setState({\n        emailError: 'Enter valid Email!'\n      });\n    }\n  };\n\n  const validatePhoneNumber = e => {\n    const number = e.target.value;\n    const isValidPhoneNumber = validator.isMobilePhone(number, 'en-IN');\n\n    if (isValidPhoneNumber) {\n      this.setState({\n        phoneError: 'Valid Phone!'\n      });\n    } else {\n      this.setState({\n        phoneError: \"Invalid Phone Number\"\n      });\n    }\n  };\n\n  const onsubmit = async e => {\n    e.preventDefault();\n    const name = e.target.elements.full_name.value;\n    const home = e.target.elements.home.value;\n    const location = e.target.elements.location.value;\n    const email = e.target.elements.email.value;\n    const phone = e.target.elements.phone.value;\n    const address = e.target.elements.userAddress.value;\n    await this.props.contract.methods.addUser(name, home, location, email, phone).send({\n      from: address\n    }).then(function (result) {\n      console.log(\"The funciton was succesfully terminated\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    color: \"lightblue\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onsubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up for User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please fill in this form to create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"spAddress\",\n        readOnly: true,\n        disabled: true,\n        value: Account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter full name\",\n        name: \"full_name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Home adddress\",\n        name: \"home\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter City\",\n        name: \"location\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Enter Email\",\n        onChange: e => validateEmail(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          color: 'red'\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        placeholder: \"Enter Phone\",\n        onChange: e => validatePhoneNumber(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 67\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          color: 'red'\n        },\n        children: phoneError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-2 btn-sm w-50\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterServiceProvider, \"gfTXIx74oi81xMSUP02eJW4VBBs=\");\n\n_c = RegisterServiceProvider;\nexport default RegisterServiceProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterServiceProvider\");","map":{"version":3,"sources":["/home/demonwolf/WebstormProjects/SPE-final-project/client/src/components/RegisterServiceProvider.js"],"names":["React","useState","validator","RegisterServiceProvider","Account","Contract","account","setAccount","validateEmail","e","email","target","value","isEmail","setState","emailError","validatePhoneNumber","number","isValidPhoneNumber","isMobilePhone","phoneError","onsubmit","preventDefault","name","elements","full_name","home","location","phone","address","userAddress","props","contract","methods","addUser","send","from","then","result","console","log","fontWeight","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport 'react-bootstrap';\nimport {useState} from 'react';\nimport validator from \"validator\";\nconst RegisterServiceProvider = (Account, Contract) =>{\n    let [account, setAccount] = useState(0x0);\n    const validateEmail= (e)=>{\n        let email = e.target.value;\n\n        if (validator.isEmail(email)) {\n            this.setState({emailError : 'Valid Email!'});\n        }\n        else {\n            this.setState({emailError : 'Enter valid Email!'});\n        }\n    }\n\n    const validatePhoneNumber = (e)=>{\n        const number = e.target.value;\n        const isValidPhoneNumber = validator.isMobilePhone(number, 'en-IN')\n        if(isValidPhoneNumber){\n            this.setState({phoneError :'Valid Phone!'});\n        }\n        else {\n            this.setState({phoneError : \"Invalid Phone Number\"});\n        }\n    }\n\n    const onsubmit = async(e)=>{\n        e.preventDefault();\n        const name = e.target.elements.full_name.value;\n        const home = e.target.elements.home.value;\n        const location = e.target.elements.location.value;\n        const email = e.target.elements.email.value;\n        const phone = e.target.elements.phone.value;\n        const address= e.target.elements.userAddress.value;\n        await this.props.contract.methods.addUser(name,home,location, email,phone).send({from : address}).then(function(result){\n            console.log(\"The funciton was succesfully terminated\");\n        });\n\n    }\n\n    return(\n        <div className=\"container\" color= \"lightblue\">\n            <form onSubmit={onsubmit}>\n                <h1>Sign Up for User</h1>\n                <p>Please fill in this form to create an account</p>\n                <input type =\"text\"  name = \"spAddress\" readOnly={true}  disabled={true} value={Account}/>\n                <input type=\"text\" placeholder=\"Enter full name\" name=\"full_name\"   required/>\n                <input type=\"text\" placeholder=\"Enter Home adddress\" name=\"home\"   required/>\n                <input type=\"text\" placeholder=\"Enter City\" name=\"location\" required/>\n                <input type=\"text\" name=\"email\" placeholder=\"Enter Email\"\n                       onChange={(e) => validateEmail(e)}/> <br/>\n                <span style={{\n                    fontWeight: 'bold',\n                    color: 'red',\n                }}>{emailError}</span>\n                <input type=\"text\" name=\"phone\" placeholder=\"Enter Phone\"\n                       onChange={(e) => validatePhoneNumber(e)}/> <br/>\n                <span style={{\n                    fontWeight: 'bold',\n                    color: 'red',\n                }}>{phoneError}</span>\n                <button className=\"btn btn-primary mt-2 btn-sm w-50\">Sign Up</button>\n            </form>\n        </div>\n    )\n}\n\nexport default RegisterServiceProvider;"]},"metadata":{},"sourceType":"module"}