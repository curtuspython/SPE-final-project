{"ast":null,"code":"var _jsxFileName = \"/home/demonwolf/WebstormProjects/SPE-final-project/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\nimport ModelABI from './contracts/Model.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState();\n  useEffect(() => {\n    loadWeb3();\n    connectBlockChainData();\n  }, []);\n\n  const addUser = async () => {\n    await ModelABI.methods.addUser(\"Bhuwnesh Lohani\", \"Bangalore\", \"bhuwnesh.126@gmail.com\", \"7579245939\").on(\"transactionHash\", () => {\n      console.log(\"succesfully added the user\");\n    });\n  };\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  };\n\n  const connectBlockChainData = async () => {\n    const web3 = await new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const accounts = await web3.eth.getAccounts();\n    setCurrentAccount(accounts[0]);\n    console.log(currentAccount);\n    const networkId = await web3.eth.net.getId();\n    const networkData = ModelABI.networks[networkId];\n\n    if (networkData) {\n      await addUser();\n    } else {\n      window.alert(\"Please switch to Rinkeby Network!!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VK9+XnBcl8xjHxLAig35nAKzHSs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/demonwolf/WebstormProjects/SPE-final-project/client/src/App.js"],"names":["React","useEffect","useState","Web3","ModelABI","App","currentAccount","setCurrentAccount","loadWeb3","connectBlockChainData","addUser","methods","on","console","log","window","ethereum","web3","enable","currentProvider","alert","givenProvider","accounts","eth","getAccounts","networkId","net","getId","networkData","networks","logo"],"mappings":";;;AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,EAApD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ;AACRC,IAAAA,qBAAqB;AACtB,GAHQ,EAGP,EAHO,CAAT;;AAKA,QAAMC,OAAO,GAAG,YAAW;AACzB,UAAMN,QAAQ,CACTO,OADC,CAEDD,OAFC,CAEO,iBAFP,EAE0B,WAF1B,EAEuC,wBAFvC,EAEgE,YAFhE,EAGDE,EAHC,CAGE,iBAHF,EAGqB,MAAI;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,KALC,CAAN;AAMD,GAPD;;AAQA,QAAMN,QAAQ,GAAG,YAAY;AAC3B,QAAIO,MAAM,CAACC,QAAX,EAAqB;AACnBD,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAId,IAAJ,CAASY,MAAM,CAACC,QAAhB,CAAd;AACA,YAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;AACD,KAHD,MAIK,IAAIH,MAAM,CAACE,IAAX,EAAiB;AACpBF,MAAAA,MAAM,CAACE,IAAP,GAAc,IAAId,IAAJ,CAASY,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,KAFI,MAGA;AACHJ,MAAAA,MAAM,CAACK,KAAP,CAAa,qEAAb;AACD;AACF,GAXD;;AAaA,QAAMX,qBAAqB,GAAG,YAAU;AACtC,UAAMQ,IAAI,GAAG,MAAM,IAAId,IAAJ,CAASA,IAAI,CAACkB,aAAL,IAAsB,uBAA/B,CAAnB;AACA,UAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASC,WAAT,EAAvB;AACAjB,IAAAA,iBAAiB,CAACe,QAAQ,CAAC,CAAD,CAAT,CAAjB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYR,cAAZ;AACA,UAAMmB,SAAS,GAAG,MAAMR,IAAI,CAACM,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;AACA,UAAMC,WAAW,GAAGxB,QAAQ,CAACyB,QAAT,CAAkBJ,SAAlB,CAApB;;AACA,QAAGG,WAAH,EAAe;AACT,YAAMlB,OAAO,EAAb;AACL,KAFD,MAGI;AACFK,MAAAA,MAAM,CAACK,KAAP,CAAa,oCAAb;AACD;AACF,GAbD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEU,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA5DQzB,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport React,{useEffect, useState} from 'react';\nimport './App.css';\nimport Web3 from 'web3' \nimport ModelABI from './contracts/Model.json'\n\nfunction App() {\n  const [currentAccount, setCurrentAccount] = useState();\n  useEffect(() => {\n    loadWeb3();\n    connectBlockChainData();\n  },[]);\n\n  const addUser = async () =>{\n    await ModelABI\n        .methods\n        .addUser(\"Bhuwnesh Lohani\", \"Bangalore\", \"bhuwnesh.126@gmail.com\",\"7579245939\")\n        .on(\"transactionHash\", ()=>{\n          console.log(\"succesfully added the user\");\n        });\n  }\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  const connectBlockChainData = async() =>{\n    const web3 = await new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    const accounts = await web3.eth.getAccounts()\n    setCurrentAccount(accounts[0]);\n    console.log(currentAccount);\n    const networkId = await web3.eth.net.getId();\n    const networkData = ModelABI.networks[networkId];\n    if(networkData){\n          await addUser();\n    }\n    else{\n      window.alert(\"Please switch to Rinkeby Network!!\")\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}