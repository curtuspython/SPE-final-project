{"ast":null,"code":"import _regeneratorRuntime from\"/home/demonwolf/WebstormProjects/SPE-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/demonwolf/WebstormProjects/SPE-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/demonwolf/WebstormProjects/SPE-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/demonwolf/WebstormProjects/SPE-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/demonwolf/WebstormProjects/SPE-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/demonwolf/WebstormProjects/SPE-final-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import'react-bootstrap';import React from'react';import'./App.css';import Web3 from'web3';import ModelABI from'./contracts/Model.json';import RegisterScreen from\"./components/RegisterScreen\";import DisplayServiceProviders from\"./components/DisplayServiceProviders\";import Payment from\"./components/Payment\";import Servp from\"./components/providerscreen\";import Wait from\"./components/wait\";import{jsx as _jsx}from\"react/jsx-runtime\";var Welcome=/*#__PURE__*/function(_React$Component){_inherits(Welcome,_React$Component);var _super=_createSuper(Welcome);function Welcome(props){var _this;_classCallCheck(this,Welcome);_this=_super.call(this,props);_this.state={currentAccount:0x0,contract:null,existingUser:null,existingServiceProvider:null,serviceProvidersList:null,msg:false,ong:false};return _this;}_createClass(Welcome,[{key:\"componentWillMount\",value:function componentWillMount(){var _this2=this;this.loadWeb3().then(function(r){console.log(\"Connected to metamask\");});this.connectBlockChainData().then(function(r){_this2.user();});}},{key:\"getUserState\",value:function(){var _getUserState=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(contract){var rvalue;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:rvalue=false;_context.next=3;return this.state.contract.methods.userExist(this.state.currentAccount).call().then(function(result){rvalue=result;});case 3:this.setState({existingUser:rvalue});rvalue=false;_context.next=7;return this.state.contract.methods.serviceProviderExist(this.state.currentAccount).call().then(function(result){rvalue=result;});case 7:this.setState({existingServiceProvider:rvalue});console.log(rvalue);case 9:case\"end\":return _context.stop();}}},_callee,this);}));function getUserState(_x){return _getUserState.apply(this,arguments);}return getUserState;}()},{key:\"loadWeb3\",value:function(){var _loadWeb=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!window.ethereum){_context2.next=6;break;}window.web3=new Web3(window.ethereum);_context2.next=4;return window.ethereum.enable();case 4:_context2.next=7;break;case 6:if(window.web3){window.web3=new Web3(window.web3.currentProvider);}else{window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');}case 7:case\"end\":return _context2.stop();}}},_callee2);}));function loadWeb3(){return _loadWeb.apply(this,arguments);}return loadWeb3;}()},{key:\"RegisterUser\",value:function(){var _RegisterUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name,location,email,phone){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.contract.methods.addUser(name,location,email,phone).send({from:this.state.currentAccount}).then(function(result){console.log(result);});case 2:case\"end\":return _context3.stop();}}},_callee3,this);}));function RegisterUser(_x2,_x3,_x4,_x5){return _RegisterUser.apply(this,arguments);}return RegisterUser;}()},{key:\"connectBlockChainData\",value:function(){var _connectBlockChainData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var web3,accounts,networkId,networkData,Model,x,y,iop;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return new Web3(Web3.givenProvider||\"http://localhost:8545\");case 2:web3=_context4.sent;_context4.next=5;return web3.eth.getAccounts();case 5:accounts=_context4.sent;this.setState({currentAccount:accounts[0]});console.log(this.state.currentAccount);_context4.next=10;return web3.eth.net.getId();case 10:networkId=_context4.sent;networkData=ModelABI.networks[networkId];if(!networkData){_context4.next=35;break;}_context4.next=15;return new web3.eth.Contract(ModelABI.abi,networkData.address);case 15:Model=_context4.sent;this.setState({contract:Model});_context4.next=19;return Model.methods.getAllUsers().call();case 19:x=_context4.sent;_context4.next=22;return Model.methods.getAllServiceProviders().call();case 22:y=_context4.sent;console.log(x);console.log(y);_context4.t0=console;_context4.next=28;return Model.methods.ServiceProviders(y[4]).call();case 28:_context4.t1=_context4.sent;_context4.t0.log.call(_context4.t0,_context4.t1);_context4.next=32;return this.getUserState(this.state.contract);case 32:iop=_context4.sent;_context4.next=36;break;case 35:window.alert(\"Please switch to Ropsten Network!!\");case 36:case\"end\":return _context4.stop();}}},_callee4,this);}));function connectBlockChainData(){return _connectBlockChainData.apply(this,arguments);}return connectBlockChainData;}()},{key:\"user\",value:function(){var _user=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var v,alert,s;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:v=false;alert=false;s=false;_context5.next=5;return this.state.contract.methods.Users(this.state.currentAccount).call().then(function(result){v=result.serv;alert=result.messagealert;console.log(alert);s=result.ongiong_service;});case 5:this.setState({sp:v});this.setState({msg:alert});this.setState({ong:s});case 8:case\"end\":return _context5.stop();}}},_callee5,this);}));function user(){return _user.apply(this,arguments);}return user;}()},{key:\"RegisterScreenLoader\",value:function RegisterScreenLoader(x,y){if(x===true||y===true){if(x===true){if(this.state.sp===true){if(this.state.msg===true){return/*#__PURE__*/_jsx(DisplayServiceProviders,{Account:this.state.currentAccount,Contract:this.state.contract,flag:this.state.msg});}else{if(this.state.ong==true)return/*#__PURE__*/_jsx(Payment,{contract:this.state.contract,account:this.state.currentAccount});else return/*#__PURE__*/_jsx(Wait,{});}}else{return/*#__PURE__*/_jsx(DisplayServiceProviders,{Account:this.state.currentAccount,Contract:this.state.contract,flag:this.state.msg});}}else return/*#__PURE__*/_jsx(Servp,{Account:this.state.currentAccount,Contract:this.state.contract});}else return/*#__PURE__*/_jsx(RegisterScreen,{Account:this.state.currentAccount,Contract:this.state.contract});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:this.RegisterScreenLoader(this.state.existingUser,this.state.existingServiceProvider)});}}]);return Welcome;}(React.Component);export default Welcome;","map":{"version":3,"sources":["/home/demonwolf/WebstormProjects/SPE-final-project/src/App.js"],"names":["React","Web3","ModelABI","RegisterScreen","DisplayServiceProviders","Payment","Servp","Wait","Welcome","props","state","currentAccount","contract","existingUser","existingServiceProvider","serviceProvidersList","msg","ong","loadWeb3","then","r","console","log","connectBlockChainData","user","rvalue","methods","userExist","call","result","setState","serviceProviderExist","window","ethereum","web3","enable","currentProvider","alert","name","location","email","phone","addUser","send","from","givenProvider","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","Contract","abi","address","Model","getAllUsers","x","getAllServiceProviders","y","ServiceProviders","getUserState","iop","v","s","Users","serv","messagealert","ongiong_service","sp","RegisterScreenLoader","Component"],"mappings":"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","sourcesContent":["import 'react-bootstrap'\nimport React from 'react';\nimport './App.css'\nimport Web3 from 'web3'\nimport ModelABI from './contracts/Model.json';\nimport RegisterScreen from \"./components/RegisterScreen\";\nimport DisplayServiceProviders from \"./components/DisplayServiceProviders\";\nimport Payment from \"./components/Payment\";\nimport Servp from \"./components/providerscreen\";\nimport Wait from \"./components/wait\"\n\nclass  Welcome extends React.Component{\n    componentWillMount() {\n        this.loadWeb3().then(r => {console.log(\"Connected to metamask\")});\n        this.connectBlockChainData().then(r =>{this.user();});\n\n    }\n\n    constructor(props) {\n        super(props);\n        this.state={currentAccount: 0x0,\n            contract: null,\n            existingUser :null,\n            existingServiceProvider:null,\n            serviceProvidersList :null,\n            msg : false,\n            ong :false,\n\n        };\n    }\n\n    async getUserState (contract){\n        let rvalue = false;\n         await  this.state.contract.methods.userExist( this.state.currentAccount).call()\n          .then(function (result){\n              rvalue = result;\n          });\n        this.setState({existingUser:rvalue});\n\n        rvalue = false\n        await  this.state.contract.methods.serviceProviderExist( this.state.currentAccount).call()\n            .then(function (result){\n                rvalue = result;\n            });\n        this.setState({existingServiceProvider:rvalue});\n\n        console.log(rvalue);\n\n    }\n\n\n  async loadWeb3(){\n      if (window.ethereum) {\n          window.web3 = new Web3(window.ethereum)\n          await window.ethereum.enable()\n      } else if (window.web3) {\n          window.web3 = new Web3(window.web3.currentProvider)\n      } else {\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n      }\n  }\n  async RegisterUser(name, location, email, phone){\n\n        await  this.contract\n        .methods\n        .addUser(name, location, email, phone)\n        .send({from :  this.state.currentAccount}).then(function(result){\n            console.log(result);\n        });\n\n  }\n\n\n\n\n\n  async connectBlockChainData(){\n    const web3 = await new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    const accounts = await web3.eth.getAccounts()\n    this.setState({currentAccount:accounts[0]});\n    console.log( this.state.currentAccount);\n    const networkId = await web3.eth.net.getId();\n    const networkData = ModelABI.networks[networkId];\n    if(networkData){\n      const Model = await new web3.eth.Contract(ModelABI.abi,networkData.address);\n      this.setState({contract :Model});\n      const x = await Model.methods.getAllUsers().call();\n      const y = await Model.methods.getAllServiceProviders().call();\n      console.log(x);\n      console.log(y);\n      console.log(await Model.methods.ServiceProviders(y[4]).call());\n      let iop = await this.getUserState(this.state.contract);\n    }\n    else{\n      window.alert(\"Please switch to Ropsten Network!!\")\n    }\n  }\n\n    async user()\n    {\n        let v= false;\n        let alert = false;\n        let s=false;\n        await this.state.contract.methods.Users(this.state.currentAccount).call()\n            .then(function(result){\n                v= result.serv;\n                alert = result.messagealert;\n                console.log(alert);\n                s=result.ongiong_service;\n\n            });\n        this.setState({sp :v});\n        this.setState({msg:alert});\n        this.setState({ong:s});\n    }\n\n  RegisterScreenLoader(x, y){\n\n    if( x === true || y === true)\n        if(x === true){\n            if(this.state.sp=== true){\n                if(this.state.msg === true){\n                    return <DisplayServiceProviders Account = {this.state.currentAccount}  Contract={this.state.contract} flag = {this.state.msg}/>\n                }\n                else {\n                    if(this.state.ong==true)\n                        return <Payment contract= {this.state.contract} account ={this.state.currentAccount}/>\n                    else\n                        return <Wait/>\n                }\n            }\n            else {\n                return <DisplayServiceProviders Account = {this.state.currentAccount}  Contract={this.state.contract} flag = {this.state.msg}/>} }\n        else return <Servp Account={this.state.currentAccount}  Contract={this.state.contract}/>\n    else\n        return <RegisterScreen Account ={ this.state.currentAccount}  Contract = { this.state.contract} />\n  }\n\n  render() {\n      return (\n\n          <div className=\"App\">\n\n              {\n\n                  this.RegisterScreenLoader(this.state.existingUser,this.state.existingServiceProvider)\n              }\n\n          </div>);\n  }\n\n}\n\nexport default Welcome;\n"]},"metadata":{},"sourceType":"module"}