{"version":3,"sources":["components/images/bubble.png","components/RegisterUser.js","components/images/panda.png","components/RegisterServiceProvider.js","components/RegisterScreen.js","components/Payment.js","components/images/payment.png","components/DisplayComoponent.js","components/DisplayServiceProviders.js","components/status.js","components/userselection.js","components/Providerchoices.js","components/providerscreen.js","components/images/wait.jpg","components/wait.js","App.js","reportWebVitals.js","index.js"],"names":["RegisterUser","props","onsubmit","e","a","preventDefault","name","target","elements","full_name","value","home","location","email","phone","address","userAddress","contract","methods","addUser","send","from","then","result","console","log","window","reload","state","emailError","phoneError","userAccount","Account","validator","isEmail","this","setState","number","isMobilePhone","document","title","color","onSubmit","type","readOnly","disabled","placeholder","required","onChange","validateEmail","style","fontWeight","validatePhoneNumber","className","src","bubbles","Component","withRouter","useState","typeservice","setType","setEmailError","setPhoneError","spAddress","sp_type","charges","Math","pow","addServiceProvider","isValidPhoneNumber","id","Number","step","Contract","class","background","height","fontSize","href","panda","padding","to","activeStyle","path","Payment","onClick","servicecompleted","account","alert","React","green","DisplayComponent","sp","Address","requestService","submitted","changeColor","bind","newColor","colSpan","city","bgcolor","hidden","DisplayServiceProviders","x","type_of_sp","getAllServiceProviders","call","service_providers","check_service_Cancelled","i","z","length","ServiceProviders","service_type","status","push","list_of_selected_sp","isSubmitted","flag","width","margin","map","index","getStatus","Stat","shoot","service_off","r","borderRadius","userselection","servi","service_choice","Users","ongiong_service","Providerchoices","loc","return_my_users","v","list","Status","propTypes","providerscreen","wait","wai","Welcome","currentAccount","existingUser","existingServiceProvider","serviceProvidersList","msg","ong","loadWeb3","connectBlockChainData","user","rvalue","userExist","serviceProviderExist","ethereum","web3","Web3","enable","currentProvider","givenProvider","eth","getAccounts","accounts","net","getId","networkId","networkData","ModelABI","networks","abi","Model","getAllUsers","y","getUserState","s","serv","messagealert","RegisterScreenLoader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8ecf7d1b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bubble.5abfb2f4.png\";","import React, {Component, useState} from \"react\";\nimport '../css/RegisterScreen.css'\nimport validator from 'validator'\nimport {withRouter} from \"react-router\";\nimport bubbles from \"./images/bubble.png\";\n\nclass RegisterUser extends Component{\n\n\n    constructor(props) {\n        super(props);\n        this.state={emailError: '', phoneError :'', userAccount :this.props.Account, contract:this.props.contract};\n\n    }\n\n    validateEmail(e){\n        let email = e.target.value;\n\n        if (validator.isEmail(email)) {\n            this.setState({emailError : 'Valid Email!'});\n        }\n        else {\n            this.setState({emailError : 'Enter valid Email!'});\n        }\n    }\n\n    validatePhoneNumber(e){\n        const number = e.target.value;\n        const isValidPhoneNumber = validator.isMobilePhone(number, 'en-IN')\n        if(isValidPhoneNumber){\n            this.setState({phoneError :'Valid Phone!'});\n        }\n        else {\n            this.setState({phoneError : \"Invalid Phone Number\"});\n        }\n    }\n\n    onsubmit = async(e)=>{\n\n        e.preventDefault();\n        const name = e.target.elements.full_name.value;\n        const home = e.target.elements.home.value;\n        const location = e.target.elements.location.value;\n        const email = e.target.elements.email.value;\n        const phone = e.target.elements.phone.value;\n        const address= e.target.elements.userAddress.value;\n        await this.props.contract.methods.addUser(name,home,location, email,phone).send({from : address}).then(function(result){\n            console.log(\"Function succesfully terminated\");\n        });\n        window.location.reload(false);\n\n    }\n    render(){\n        document.title = \"User Registration\";\n    return(\n        <div color= \"lightblue\">\n            <form onSubmit={this.onsubmit}><br></br>\n                <h1>Sign Up for User</h1><br></br>\n                <input type =\"text\"  name = \"userAddress\" readOnly={true} value={this.state.userAccount = this.props.Account} disabled={true}/><br></br><br></br>\n                <input type=\"text\" placeholder=\"Enter full name\" name=\"full_name\"   required/><br></br><br></br>\n                <input type=\"text\" placeholder=\"Enter Home adddress\" name=\"home\"   required/><br></br><br></br>\n                <input type=\"text\" placeholder=\"Enter City\" name=\"location\" required/><br></br><br></br>\n                <input type=\"text\" name=\"email\" placeholder=\"Enter Email\"\n    onChange={(e) => this.validateEmail(e)}/> <br/>\n                <span style={{\n                    fontWeight: 'bold',\n                    color: 'red',\n                }}>{this.state.emailError}</span><br></br>\n                <input type=\"text\" name=\"phone\" placeholder=\"Enter Phone\"\n    onChange={(e) => this.validatePhoneNumber(e)}/> <br/>\n                <span style={{\n                    fontWeight: 'bold',\n                    color: 'red',\n                }}>{this.state.phoneError}</span><br></br>\n                <button className=\"btn btn-primary mt-2 btn-sm w-50\">Sign Up</button>\n            </form>\n            <div className=\"bubbles\">\n                <img src={bubbles}/>\n                <img src={bubbles}/>\n                <img src={bubbles}/><img src={bubbles}/>\n                <img src={bubbles}/>\n                <img src={bubbles}/>\n                <img src={bubbles}/>\n                <img src={bubbles}/>\n\n\n            </div>\n        </div>\n    )}\n}\n\nexport default withRouter(RegisterUser);","export default __webpack_public_path__ + \"static/media/panda.7c9e1492.png\";","import React from \"react\";\nimport 'react-bootstrap';\nimport {useState} from 'react';\nimport validator from \"validator\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {withRouter, Redirect} from 'react-router-dom'\n\n\nconst RegisterServiceProvider = ({Account, contract}) =>{\n    let [typeservice,setType] = useState(0x0);\n    let [emailError,setEmailError] = useState('');\n    let [phoneError,setPhoneError] = useState('');\n    let [navigate,setNavigate] = useState(false);\n    document.title = \"Service Provider Registration\";\n    const onChange = (e) => {\n        if(e.target.value == \"default\"){\n            setType(Number(0));}\n        else\n            console.log(typeservice);\n        setType(e.target.value);\n    }\n    const validateEmail= (e)=>{\n        let email = e.target.value;\n\n        if (validator.isEmail(email)) {\n            setEmailError(\"Valid Email!\");\n        }\n        else {\n            setEmailError( \"Enter valid Email!\");\n        }\n    }\n\n    const validatePhoneNumber = (e)=>{\n        const number = e.target.value;\n        const isValidPhoneNumber = validator.isMobilePhone(number, 'en-IN')\n        if(isValidPhoneNumber){\n            setPhoneError(\"Valid Phone!\");\n        }\n        else {\n            setPhoneError(\"Invalid Phone!\");\n        }\n    }\n\n    const nextPage = () =>{\n        if(navigate === true)\n            return <Redirect to=\"/\" push={true} />\n    }\n\n    const onsubmit = async(e)=>{\n        e.preventDefault();\n        const name = e.target.elements.full_name.value;\n        const location = e.target.elements.location.value;\n        const email = e.target.elements.email.value;\n        const phone = e.target.elements.phone.value;\n        const address= e.target.elements.spAddress.value;\n        const sp_type = typeservice;\n        const charges=e.target.elements.charges.value * Math.pow(10,18);\n       await contract.methods.addServiceProvider(name,location, email,phone, charges, sp_type).send({from : address}).then(function(result){\n            console.log(\"The funciton was succesfully terminated\");\n        });\n        window.location.reload(false);\n\n\n\n        //console.log(name+ location+ email+ phone+ address+ sp_type+ charges);\n\n    }\n\n    return(\n        <div className=\"container\" color= \"lightblue\">\n            <form onSubmit={onsubmit}>\n                <h1>Sign Up for Service Provider</h1><br></br><br></br>\n                <input type =\"text\"  name = \"spAddress\" readOnly={true}  disabled={true} value={Account}/><br></br><br></br>\n                <input type=\"text\" placeholder=\"Enter full name\" name=\"full_name\"   required/><br></br><br></br>\n                <input type=\"text\" placeholder=\"Enter Home adddress\" name=\"home\"   required/><br></br><br></br>\n                <input type=\"text\" placeholder=\"Enter City\" name=\"location\" required/><br></br><br></br>\n                <input type=\"text\" name=\"email\" placeholder=\"Enter Email\"\n                       onChange={(e) => validateEmail(e)}/> <br/><br></br><br></br>\n                <span style={{\n                    fontWeight: 'bold',\n                    color: 'red',\n                }}>{emailError}</span>\n                <input type=\"text\" name=\"phone\" placeholder=\"Enter Phone\"\n                       onChange={(e) => validatePhoneNumber(e)}/> <br/><br></br><br></br>\n                <span style={{\n                    fontWeight: 'bold',\n                    color: 'red',\n                }}>{phoneError}</span>\n                <label id =\"service_type\" >Choose Service Type:</label>\n                <select id=\"service_type\" className=\"form-control\"  onChange={onChange} required>\n                    <option value = {0}>Select</option>\n                    <option value = {1}>Carpentry</option>\n                    <option value = {2}>Plumbing</option>\n                    <option value={3}>Painting</option>\n                    <option value ={4}>Electrical</option>\n                </select>\n                <br></br><br></br>\n                <label id =\"wei\" >Enter Charges(in ETH):</label>\n                <input type=\"number\" id =\"wei\" step=\"any\" placeholder={\"Enter the charges in ETH.\"} name=\"charges\" /><br></br><br></br>\n                <button className=\"btn btn-primary mt-2 btn-sm w-50\">Sign Up</button>\n            </form>\n\n\n        </div>\n    )\n}\n\nexport default withRouter(RegisterServiceProvider);","import React from \"react\";\nimport '../css/RegisterScreen.css'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport RegisterUser from \"./RegisterUser\";\nimport bubbles from \"./images/bubble.png\"\nimport panda from \"./images/panda.png\"\nimport RegisterServiceProvider from \"./RegisterServiceProvider\";\nimport {withRouter} from \"react-router\";\n\nconst RegisterScreen = ({Account, Contract}) => {\n\n\n    return(\n        <div class = \"hero\">\n            <nav className=\"navbar navbar-light bg-light\" style={{background: \"orange\", height : \"30px\", fontSize : \"20px\"}}>\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand\" href=\"/\" >Home</a>\n                </div>\n            </nav>\n            <Router>\n\n                <div class = \"hero\">\n                    <h2>\n                    <div class = \"panda\">Welcome to<br></br><img src={panda}></img><br></br> Your Helper</div>\n                    <br></br>\n                    </h2>\n                    <ul>\n                        <div style={{background: \"red\", padding: \"10px\"}}>\n                            <li>\n                                Please click below to choose your category:<br></br><br></br>\n                            </li>\n                        </div>\n                        <br></br>\n                        <li ><Link to=\"/registeruser\" activeStyle = {{color : \"red\"}}><button class =\"button\" >User</button></Link>\n                            <br></br>\n                            <br></br>\n                        </li>\n\n\n                        <li class = \"button\"><Link to = \"/registersp\">\n                            <button className=\"button\">Service Provider</button></Link>\n\n                        </li>\n\n                    </ul>\n                    <div className=\"bubbles\">\n                        <img src={bubbles}/>\n                        <img src={bubbles}/>\n                        <img src={bubbles}/>\n                        <img src={bubbles}/>\n                        <img src={bubbles}/>\n                        <img src={bubbles}/>\n                        <img src={bubbles}/>\n                        <img src={bubbles}/>\n                    </div>\n\n                    <Switch>\n                        <Route path=\"/registeruser\">\n                            <RegisterUser Account={Account} contract ={Contract}/>\n                        </Route>\n                        <Route path = \"/registersp\">\n                            <RegisterServiceProvider Account={Account} contract ={Contract}/>\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n\n\n        </div>\n    )\n}\n\nexport default withRouter(RegisterScreen);","\nimport React from 'react'\nimport payment from './images/payment.png';\nimport panda from \"./images/panda.png\";\nclass  Payment extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state ={account:this.props.account, contract : this.props.contract};\n    }\n\n    onClick = async (e) => {\n        e.preventDefault();\n        await this.state.contract.methods.servicecompleted().send({from:this.state.account});\n        alert('paid');\n        window.location.reload(false);\n\n\n    }\n    render(){\n\n        return (\n            <div class = \"hero\">\n                <h2>\n                    <div className=\"panda\">Welcome to<br></br><img src={panda}></img><br></br> Your Helper</div>\n                    <br></br>\n                </h2>\n                <h2>CAUTION: Click only if the service is completed. </h2>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <button onClick={this.onClick} height= \"100%\"> click on this to pay to the service provider </button>\n\n            </div>\n        )}\n}\n\nexport default Payment","export default __webpack_public_path__ + \"static/media/payment.978b53fd.png\";","import React from \"react\";\nimport 'react-bootstrap';\nimport Payment from \"./Payment\";\nimport \"../css/table.css\"\nimport '../css/RegisterScreen.css'\nconst green = '#FFd177';\nconst yellow = '#39D1B4';\n\nclass DisplayComponent extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {submitted: false,color: green, contract: this.props.contract };\n        this.changeColor = this.changeColor.bind(this);\n\n    }\n    changeColor(){\n        const newColor = this.state.color === green ? yellow : green;\n        this.setState({ color: newColor })\n    }\n\n    onSubmit = async(e) => {\n        e.preventDefault();\n        console.log(this.props.sp.Address);\n        console.log(this.props.account);\n        console.log(this.props.sp.charges);\n        await this.state.contract.methods.requestService(this.props.sp.Address)\n            .send({from: this.props.account, value: this.props.sp.charges});\n        console.log(\"pressed\");\n        this.setState({submitted:true})\n        window.location.reload(false);\n\n    }\n    render(){\n        document.title = \"Select Service Provider\";\n        return(\n            <div class>\n                <br></br>\n                <br></br>\n                <form onSubmit={this.onSubmit}>\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>Charges :{this.props.sp.charges}</th>\n                            <th colSpan=\"2\">{this.props.sp.name}<br></br> {this.props.sp.city}</th>\n                        </tr>\n                        </thead>\n                    </table><table style={{'border' : \"black\" }}>\n                    <tbody>\n                    <tr>\n                        <td>{this.props.sp.phone}</td>\n                        <td>{this.props.sp.email    }</td>\n                        <td bgcolor={\"red\"}><button onClick={this.changeColor} hidden={this.state.submitted? \"true\":\"\"}>Place Request for Service</button></td>\n                    </tr>\n                    <tr>\n\n                    </tr>\n                    </tbody>\n\n                </table>\n                </form>\n\n            </div>\n\n        ) }\n}\n\n\n\nexport default DisplayComponent;","import React, {useEffect} from \"react\";\nimport 'react-bootstrap';\nimport {useState} from 'react';\nimport DisplayComponent from \"./DisplayComoponent\";\nimport \"../css/RegisterScreen.css\"\nimport panda from \"./images/panda.png\";\n\nclass DisplayServiceProviders extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state ={service_providers:null,\n        type_of_sp:1,\n        isSubmitted:false,\n        list_of_selected_sp: []};\n\n    }\n\n    onChange = async(e) =>{\n        let x = null;\n        this.setState({type_of_sp:e.target.value});\n        x = await this.props.Contract.methods.getAllServiceProviders().call();\n        this.setState({service_providers : x});\n        console.log(this.state.service_providers);\n\n    }\n\n    check_service_Cancelled =  async() =>{\n\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        let i =0;\n        let x = null;\n        let z = [];\n        for(;i<this.state.service_providers.length; ++i){\n            let x = await this.props.Contract.methods.ServiceProviders(this.state.service_providers[i]).call()\n            if(x.service_type === this.state.type_of_sp && x.status === true)\n                z.push(x)\n        }\n        this.setState({list_of_selected_sp:z })\n        console.log(z);\n\n    }\nrender() {\n        document.title = \"Select Provider\";\n        if (this.props.flag === false) {\n        return (\n            <div class=\"hero\">\n                <h2>\n                    <div className=\"panda\"><img src={panda}></img><br></br> Your Helper</div>\n                    <br></br>\n                </h2>\n                <form onSubmit={this.onSubmit}>\n                    <label id={\"service_type\"}>Choose the service category :</label>\n                    <select id=\"service_type\" style={{\n                        width: 400, height: 30, background: \"yellow\",\n                        margin: 30\n                    }} onChange={this.onChange} required>\n                        <option value={\"\"}></option>\n                        <option value={1}>Carpentry</option>\n                        <option value={2}>Plumbing</option>\n                        <option value={3}>Painting</option>\n                        <option value={4}>Electrical</option>\n                    </select>\n\n                    <button>Find</button>\n                </form>\n\n                {this.state.list_of_selected_sp.length === 0 ?\n                    <h4>No service provider for selected category.</h4> : <h2></h2>\n                }\n\n                <div>\n                    {\n\n                        this.state.list_of_selected_sp.map((sp, index) => (<div key={index}>\n\n                            <div className='users'>\n                                <DisplayComponent sp={sp} contract={this.props.Contract} account={this.props.Account}/>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div class=\"hero\">\n                <h1>service provider denied your request</h1>\n                <form onSubmit={this.onSubmit}>\n                    <label id={\"service_type\"}>Choose the service category :</label>\n                    <select id=\"service_type\" style={{\n                        width: 400, height: 30, background: \"yellow\",\n                        margin: 30\n                    }} onChange={this.onChange} required>\n                        <option value={\"\"}></option>\n                        <option value={1}>Carpentry</option>\n                        <option value={2}>Plumbing</option>\n                        <option value={3}>Painting</option>\n                        <option value={4}>Electrical</option>\n                    </select>\n\n                    <button>Find</button>\n                </form>\n                <div>\n                    {this.state.list_of_selected_sp.map((sp, index) => (<div key={index}>\n\n                            <div className='users'>\n                                <DisplayComponent sp={sp} contract={this.props.Contract} account={this.props.Account}/>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>)\n    }\n}\n\n}\n\nexport default DisplayServiceProviders;","import {withRouter} from \"react-router\";\nimport React, {Component, useLayoutEffect, useState} from \"react\";\n\nclass status extends Component{\n\n    constructor(props){\n        super(props);\n        this.state ={account:this.props.account, contract : this.props.contract, Stat:null}\n        this.getStatus().then(r => {console.log(\"Completed\")});\n    }\n    getStatus = async () =>{\n        let x = await this.props.contract.methods.ServiceProviders(this.state.account).call();\n        if(x.status === true)\n            this.setState({Stat: \"Online\"});\n        else\n            this.setState({Stat: \"Offline\"})\n        console.log(this.state.Stat);\n\n    }\n    shoot=async(e)=> {\n        e.preventDefault();\n        await this.props.contract.methods.service_off().send({from:this.state.account});\n        window.location.reload(false);\n\n    }\n    render(){\n        document.title = \"Now \" + this.state.Stat;\n        return (\n            <div>\n                <br></br><br></br>\n                <button onClick={this.shoot} style={{width:\"100%\",background: \"yellow\", borderRadius :\"1px\"}}> Current Status :{this.state.Stat} </button>\n            </div>\n        )}\n}\n\nexport default withRouter(status);","import React from 'react'\nimport 'react-bootstrap';\nimport \"../css/table.css\"\nimport '../css/RegisterScreen.css'\nconst green = '#FFd177';\nconst yellow = '#39D1B4';\n\nclass userselection extends  React.Component{\n\n\n    constructor(props){\n        super(props);\n        this.state={ contract :this.props.contract,\n            account : this.props.account,\n            servi:this.props.sp,\n            submitted:this.props.sp.ongiong_service\n\n        };\n        console.log(\"I am called\");\n        this.changeColor = this.changeColor.bind(this);\n\n    }\n\n    changeColor(){\n        const newColor = this.state.color === green ? yellow : green;\n        this.setState({ color: newColor })\n    }\n\n    onSubmit = async(e) => {\n        e.preventDefault();\n        console.log(this.state.servi.Address);\n\n        await this.state.contract.methods.service_choice(this.state.servi.Address).send({from:this.state.account});\n\n        await this.state.contract.methods.Users(this.state.servi.Address).call()\n            .then(function(result){\n                console.log(result.ongiong_service);\n            });\n        console.log(\"pressed\");\n        this.setState({submitted:true})\n        window.location.reload(false);\n    }\n\n    render(){\n        return (\n            <div >\n\n                <br></br>\n                <br></br>\n                <form onSubmit={this.onSubmit}>\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>Address:{this.state.servi.Address}</th>\n                            <th colSpan=\"2\">{this.state.servi.name}<br></br> {this.state.servi.city}</th>\n                        </tr>\n                        </thead>\n                    </table><table style={{'border' : \"black\" }}>\n                    <tbody>\n                    <tr>\n                        <td>{this.state.servi.phone}</td>\n                        <td>{this.state.servi.email}</td>\n                        <td bgcolor={\"red\"}><button onClick={this.changeColor} hidden={this.state.submitted? \"true\":\"\"}>Accept Service Request</button></td>\n                    </tr>\n                    <tr>\n\n                    </tr>\n                    </tbody>\n\n                </table>\n                </form>\n\n\n\n\n            </div>\n        )\n    }\n}\nexport default userselection;","import React from 'react'\nimport 'react-bootstrap';\nimport \"../css/table.css\"\nimport '../css/RegisterScreen.css'\nimport User from \"./userselection\"\nconst green = '#FFd177';\nconst yellow = '#39D1B4';\n\n\n\nclass Providerchoices extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state={ contract :this.props.contract,\n            account : this.props.account,\n            list:[]\n\n\n\n        };\n\n\n    }\n\n    componentWillMount(){\n        this.loc()\n\n    }\n\n\n    loc= async()=>{\n        let v;\n        v = await this.state.contract.methods.return_my_users(this.state.account).call();\n        console.log(v);\n        let i=0;\n        let x=null;\n        let z=[];\n        for(;i<v.length;i++){\n            await this.state.contract.methods.Users(v[i]).call()\n                .then(function (result){\n                    x = result;\n                    z.push(x);\n                });\n\n        }\n        this.setState({list:z});\n        console.log(this.state.list);\n\n    }\n\n\n\n\n    render(){\n        document.title = \"Select the User\";\n        if (this.state.list === []){\n            return <h1> sorry no requests for now</h1>}\n            else\n        {\n        return (\n\n            <div class>\n                <br></br>\n                git {this.state.list.length === 0 ? <h6>No user requests for now</h6>: <h2></h2>}\n\n\n                { this.state.list.map((sp,index)=>(<div key={index}>\n                        <div className='users'>\n                            <User sp ={sp} contract ={this.state.contract} account = {this.state.account}/>\n                        </div>\n                    </div>\n                ))}\n\n            </ div>\n        )}\n    }\n\n\n\n\n}\n\n\n\n\n\n\n\n\nexport default Providerchoices;","import React from \"react\";\nimport '../css/RegisterScreen.css'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport Status from \"./status\";\nimport Provider from \"./Providerchoices\";\nimport * as PropTypes from \"prop-types\";\nimport panda from \"./images/panda.png\";\n\n\nStatus.propTypes = {};\nconst providerscreen = ({Account, Contract}) => {\n    document.title = \"Service Provider Screen\";\n    return(\n\n        <Router>\n            <div class={\"hero\"}>\n                <h2>\n                    <div className=\"panda\">Welcome to<br></br><img src={panda}></img><br></br> Your Helper</div>\n                    <br></br>\n                </h2>\n                <ul><br></br>\n                    <li>\n                        <br></br><br></br>\n                        <h2>What you want to do:</h2><br></br>\n                    </li>\n                    <li>\n                        <Link to=\"/status\"><button class =\"button\">Change the Status</button></Link>\n                    </li>\n                    <li>\n                        <Link to = \"/user\"><br></br><br></br>\n                            <button class=\"button\">Select the User</button></Link>\n                    </li>\n\n                </ul>\n\n\n                {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                <Switch>\n\n                    <Route path=\"/status\">\n                        <Status contract ={Contract} account={Account}/>\n                    </Route>\n                    <Route path = \"/user\">\n                        <Provider contract ={Contract} account={Account} />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default providerscreen;","export default __webpack_public_path__ + \"static/media/wait.4154d8e6.jpg\";","import React from 'react'\nimport wai from './images/wait.jpg';\nconst wait = () => {\n    document.title = \"Wait\";\n    return (\n        <div>\n            <div>\n                <img src={wai}  width= \"100%\" height=\"60%\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default wait","import 'react-bootstrap'\nimport React from 'react';\nimport './App.css'\nimport Web3 from 'web3'\nimport ModelABI from './contracts/Model.json';\nimport RegisterScreen from \"./components/RegisterScreen\";\nimport DisplayServiceProviders from \"./components/DisplayServiceProviders\";\nimport Payment from \"./components/Payment\";\nimport Servp from \"./components/providerscreen\";\nimport Wait from \"./components/wait\"\n\nclass  Welcome extends React.Component{\n    componentWillMount() {\n        this.loadWeb3().then(r => {console.log(\"Connected to metamask\")});\n        this.connectBlockChainData().then(r =>{this.user();});\n\n    }\n\n    constructor(props) {\n        super(props);\n        this.state={currentAccount: 0x0,\n            contract: null,\n            existingUser :null,\n            existingServiceProvider:null,\n            serviceProvidersList :null,\n            msg : false,\n            ong :false,\n\n        };\n    }\n\n    async getUserState (contract){\n        let rvalue = false;\n         await  this.state.contract.methods.userExist( this.state.currentAccount).call()\n          .then(function (result){\n              rvalue = result;\n          });\n        this.setState({existingUser:rvalue});\n\n        rvalue = false\n        await  this.state.contract.methods.serviceProviderExist( this.state.currentAccount).call()\n            .then(function (result){\n                rvalue = result;\n            });\n        this.setState({existingServiceProvider:rvalue});\n\n        console.log(rvalue);\n\n    }\n\n\n  async loadWeb3(){\n      if (window.ethereum) {\n          window.web3 = new Web3(window.ethereum)\n          await window.ethereum.enable()\n      } else if (window.web3) {\n          window.web3 = new Web3(window.web3.currentProvider)\n      } else {\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n      }\n  }\n  async RegisterUser(name, location, email, phone){\n\n        await  this.contract\n        .methods\n        .addUser(name, location, email, phone)\n        .send({from :  this.state.currentAccount}).then(function(result){\n            console.log(result);\n        });\n\n  }\n\n\n\n\n\n  async connectBlockChainData(){\n    const web3 = await new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    const accounts = await web3.eth.getAccounts()\n    this.setState({currentAccount:accounts[0]});\n    console.log( this.state.currentAccount);\n    const networkId = await web3.eth.net.getId();\n    const networkData = ModelABI.networks[networkId];\n    if(networkData){\n      const Model = await new web3.eth.Contract(ModelABI.abi,networkData.address);\n      this.setState({contract :Model});\n      const x = await Model.methods.getAllUsers().call();\n      const y = await Model.methods.getAllServiceProviders().call();\n      console.log(x);\n      console.log(y);\n      console.log(await Model.methods.ServiceProviders(y[4]).call());\n      let iop = await this.getUserState(this.state.contract);\n    }\n    else{\n      window.alert(\"Please switch to Ropsten Network!!\")\n    }\n  }\n\n    async user()\n    {\n        let v= false;\n        let alert = false;\n        let s=false;\n        await this.state.contract.methods.Users(this.state.currentAccount).call()\n            .then(function(result){\n                v= result.serv;\n                alert = result.messagealert;\n                console.log(alert);\n                s=result.ongiong_service;\n\n            });\n        this.setState({sp :v});\n        this.setState({msg:alert});\n        this.setState({ong:s});\n    }\n\n  RegisterScreenLoader(x, y){\n\n    if( x === true || y === true)\n        if(x === true){\n            if(this.state.sp=== true){\n                if(this.state.msg === true){\n                    return <DisplayServiceProviders Account = {this.state.currentAccount}  Contract={this.state.contract} flag = {this.state.msg}/>\n                }\n                else {\n                    if(this.state.ong==true)\n                        return <Payment contract= {this.state.contract} account ={this.state.currentAccount}/>\n                    else\n                        return <Wait/>\n                }\n            }\n            else {\n                return <DisplayServiceProviders Account = {this.state.currentAccount}  Contract={this.state.contract} flag = {this.state.msg}/>} }\n        else return <Servp Account={this.state.currentAccount}  Contract={this.state.contract}/>\n    else\n        return <RegisterScreen Account ={ this.state.currentAccount}  Contract = { this.state.contract} />\n  }\n\n  render() {\n      return (\n\n          <div className=\"App\">\n\n              {\n\n                  this.RegisterScreenLoader(this.state.existingUser,this.state.existingServiceProvider)\n              }\n\n          </div>);\n  }\n\n}\n\nexport default Welcome;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <BrowserRouter><App><title>Hello</title></App></BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}